#LyX 1.5.1 created this file. For more info see http://www.lyx.org/
\lyxformat 245
\begin_document
\begin_header
\textclass article
\language english
\inputencoding auto
\fontscheme default
\graphics default
\paperfontsize default
\spacing single
\papersize default
\use_geometry false
\use_amsmath 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author ""
\author ""
\end_header

\begin_body

\begin_layout Standard
\begin_inset LatexCommand \tableofcontents{}

\end_inset


\end_layout

\begin_layout Title
XRCed Manual
\end_layout

\begin_layout Date
Roman Rolinsky <genericsoma@gmail.com>
\end_layout

\begin_layout Section*
Introduction
\end_layout

\begin_layout Standard
XRCed is a resource editor for editing XRC resource files used in wxWidgets
 or wxPython.
 XRC is an XML-based format for describing the layout of the interface.
 When a XRC file it being parsed in the application (using wxXmlResource
 class), objects corresponding to the interface elements defined in .xrc
 file are created and can be immediately used.
 Please refer to the corresponding documentation depending on your language
 for details.
 XRC files are actually normal text files.
 Structure of an XML file is defined by a hierarchy of 
\emph on
nodes,
\emph default
 each node is delimited by a pair of 
\emph on
tags
\emph default
 in a similar manner to HTML format.
 XRC format uses a special 
\family typewriter
object
\family default
 tag for defining interface element nodes, which can contain a number of
 
\emph on
attribute
\emph default
 nodes with tag names corresponding to the attribute names, e.g.
 
\family typewriter
<pos>100,100</pos>
\family default
.
 Object nodes always have XML attribute 
\begin_inset Quotes eld
\end_inset

class
\begin_inset Quotes erd
\end_inset

 defined, e.g.
 
\family typewriter
<object class='wxFrame'>
\family default
.
\end_layout

\begin_layout Section*
Getting started
\end_layout

\begin_layout Standard
XRCed interface contains these components:
\end_layout

\begin_layout Description
XML\InsetSpace \space{}
tree a tree representing the structure of the resource file.
\end_layout

\begin_layout Description
Attribute\InsetSpace \space{}
panel a panel with the information about the currently selected
 tree item.
 Class and object name is shown in the upper part and a notebook with a
 number of pages is shown below for editing object's attributes.
\end_layout

\begin_layout Description
Pull-down\InsetSpace \space{}
menu is shown when a used right-clicks inside the tree control.
 Is is used for creating new elements and basic operations such as copy/paste.
\end_layout

\begin_layout Description
Component\InsetSpace \space{}
panel is a graphical menu for creating new elements by clicking
 on icons or by dragging them on the test window.
\end_layout

\begin_layout Description
Test\InsetSpace \space{}
window can be shown for an already existing part of the resource tree
 to see the resulting appearance of the interface.
\end_layout

\begin_layout Standard
Using XRCed is easy once you understand some basic principles.
 First of all, it is using a structure-oriented tree-based editing technique,
 versus point-and-click method used in most GUI builders.
 The tree is actually almost a direct respresentation of the hierarchy of
 
\emph on
object
\emph default
 nodes in XRC file.
 More precisely, only the nodes corresponding to visible interface elements
 are shown.
 An example of an object node which is not an interface element is the sizeritem
 node.
 
\end_layout

\begin_layout Standard
XRCed tries hard to make accessible the full information contained in XRC
 file, so even the nodes which are not shown in the tree must be represented.
 This is done by adding their property pages to the attribute panel.
\end_layout

\begin_layout Standard
Secondly, creating new elements is context-dependent.
 The new elements are inserted in the tree relative to the current selection
 (except for drag-and-drop mode when the place is determined dynamically).
 Sometimes there is an ambiguity on the exact position, because some elements
 are 
\emph on
containers
\emph default
 which can have children, but it may be needed to create the new element
 as a sibling node instead of a child.
 Sibling mode can be forced by holding 
\series bold
Ctrl
\series default
 key when inserting a new element.
 Similarly, a new element can be inserted as the first child of a container
 by holding 
\series bold
Shift
\series default
 key (default is to append it as the last child).
\end_layout

\end_body
\end_document
